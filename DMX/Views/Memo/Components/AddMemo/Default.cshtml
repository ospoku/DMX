
@model DMX.ViewModels.AddMemoVM;

<div class="modal fade" id="AddMemo" data-bs-backdrop="static" data-bs-keyboard="false">
    <div class="modal-dialog modal-lg">

        <div class="modal-content">
            <div class="modal-header">

                <h6>Add Memo</h6>
                <button type="button" data-bs-dismiss="modal" aria-label="Close" class="btn btn-sm btn-outline-danger">Close</button>
            </div>
             @using (Html.BeginForm("AddMemo", "Memo", FormMethod.Post))
            {
            <div class="modal-body">
                    <div class="did-floating-label-content">
                        <input type="text" asp-for="@Model.Title" class="did-floating-input" placeholder="" required>
                        <label class="did-floating-label">Memo Title</label>
                    </div>
                
                    <div class="form-group">
                        <textarea class="form-control" id="MemoContent" asp-for="@Model.Content" type="text" placeholder="Memo Content"></textarea>
                    </div>
                    <div class="did-floating-label-content">

                        <select id="selectMemoUser" class="did-floating-select"  asp-items="@Model.UsersList" asp-for="@Model.SelectedUsers"></select>
                        <label class="did-floating-label">Select Approver(s)</label>
                    </div>
                    </div>
                    <div class="modal-footer"><button class="btn btn-block btn-primary">Save</button></div>
                }
            </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        // Initialize Select2 for dropdowns within the modal
        const modalSelector = '#AddMemo';
        const memoContentSelector = '#MemoContent';

        $('#selectMemoUser').select2({
            dropdownParent: $(modalSelector)
        });

        // Initialize TinyMCE when the modal is shown
        $(modalSelector)
            .off('shown.bs.modal')
            .on('shown.bs.modal', function () {
                if (!tinymce.get(memoContentSelector.substring(1))) { // Check if not already initialized
                    try {
                        tinymce.init({
                            selector: memoContentSelector,
                            menubar: true,
                            toolbar: 'undo redo | bold italic underline | alignleft aligncenter alignright',
                            height: 300 // Default height
                        });
                    } catch (e) {
                        console.error('TinyMCE initialization failed:', e);
                    }
                }
            });

        // Remove TinyMCE instance on modal close
        $(modalSelector)
            .off('hidden.bs.modal')
            .on('hidden.bs.modal', function () {
                try {
                    tinymce.remove(memoContentSelector);
                } catch (e) {
                    console.error('TinyMCE removal failed:', e);
                }
            });
    });
</script>

