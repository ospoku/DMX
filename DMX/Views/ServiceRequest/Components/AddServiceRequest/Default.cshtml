@model DMX.ViewModels.AddServiceRequestVM;
<div class="modal fade" id="AddServiceRequest" data-bs-backdrop="static" data-bs-keyboard="false">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h6>Add Service Request</h6>
                <button type="button" data-bs-dismiss="modal" aria-label="Close" class="btn btn-sm btn-outline-danger">Close</button>
            </div>
            @using (Html.BeginForm("AddServiceRequest", "ServiceRequest", FormMethod.Post, new { id = "addServiceRequestForm", enctype = "multipart/form-data" }))
            {
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-7">
                            <div class="did-floating-label-content">
                                <input type="text" asp-for="@Model.Title" class="did-floating-input" placeholder="">
                                <label class="did-floating-label">Title</label>
                            </div>
                            <div class="form-group">
                                <textarea type="text" id="txtDescription" asp-for="@Model.Description"></textarea>
                            </div>
                            <div class="form-group">
                                <input type="file" id="formFile" name="formFile" asp-for="UploadFile" hidden />
                                <label for="formFile" class="uploadLabel">
                                    <i class="fa fa-cloud-upload" style="color: #1e4c82; font-size: medium"></i>
                                    <label id="sFile">Select file</label>
                                    <span id="file-chosen">No file chosen</span>
                                </label>
                            </div>
                        </div>
                        <div class="col-md-1 vr-container">
                            <div class="vr"></div>
                        </div>
                        <div class="col-md-4">
                            <div class="did-floating-label-content">
                                <select id="selectRequestTypes" class="did-floating-select" asp-items="@Model.RequestTypes" asp-for="@Model.RequestTypeId"></select>
                                <label class="did-floating-label">Request Type</label>
                            </div>
                            <div class="did-floating-label-content">
                                <select id="selectCategory" asp-for="@Model.CategoryId" class="did-floating-select" asp-items="@Model.Categories"></select>
                                <label class="did-floating-label">Select Category</label>
                            </div>
                            <div class="did-floating-label-content">
                                <select id="selectUrgency" class="did-floating-select" asp-items="@Model.Urgency" asp-for="@Model.PriorityId"></select>
                                <label class="did-floating-label">Select Priority</label>
                            </div>
                            <div class="did-floating-label-content">
                                <select id="selectStatus" class="did-floating-select" asp-items="@Model.Status" asp-for="@Model.StatusId"></select>
                                <label class="did-floating-label">Select Status</label>
                            </div>
                            <div class="did-floating-label-content">
                                <select id="selectUsers" class="did-floating-select" asp-items="@Model.UsersList" asp-for="@Model.SelectedUsers"></select>
                                <label class="did-floating-label">Select User</label>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button id="btnAddServiceRequest" class="btn btn-block btn-primary">Save</button>
                </div>
            }
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        const modalSelector = '#AddServiceRequest';
        const descriptionContentSelector = '#txtDescription';
        const addServiceRequestForm = '#addServiceRequestForm';

        // Initialize Select2
        $('#selectUsers').select2({ dropdownParent: $(modalSelector) });
        $('#selectUrgency').select2({ dropdownParent: $(modalSelector) });
        $('#selectRequestTypes').select2({ dropdownParent: $(modalSelector) });
        $('#selectCategory').select2({ dropdownParent: $(modalSelector) });

        // File input change event
        const actualBtn = document.getElementById('formFile');
        const fileChosen = document.getElementById('file-chosen');
        actualBtn.addEventListener('change', function () {
            fileChosen.textContent = this.files[0].name;
        });

        // Modal shown event
        $(modalSelector).on('shown.bs.modal', function () {
            if (!tinymce.get(descriptionContentSelector.substring(1))) {
                tinymce.init({
                    selector: descriptionContentSelector,
                    menubar: true,
                    toolbar: 'undo redo | bold italic underline | alignleft aligncenter alignright',
                    height: 500,
                });
            }
        });

        // Modal hidden event
        $(modalSelector).on('hidden.bs.modal', function () {
            let editor = tinymce.get(descriptionContentSelector.substring(1));
            if (editor) {
                editor.remove();
            }
            $(addServiceRequestForm).trigger("reset");
            $(addServiceRequestForm).find(".is-invalid").removeClass("is-invalid");
        });

        // Form submission
        $('#btnAddServiceRequest').click(function (event) {
            event.preventDefault();

            const form = $(addServiceRequestForm)[0];
            if (!form.checkValidity()) {
                form.reportValidity();
                return;
            }

            const selectedUsers = $('#selectUsers').val();
            const descriptionContent = tinymce.get('txtDescription')?.getContent().trim();

            if (!selectedUsers || selectedUsers.length === 0) {
                Swal.fire('Error', 'Please select at least one user.', 'error');
                return;
            }
            if (!descriptionContent) {
                Swal.fire('Error', 'Description content cannot be empty.', 'error');
                return;
            }

            Swal.fire({
                title: 'Are you sure?',
                text: "Do you really want to save this record?",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, save it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    form.submit();
                }
            });
        });
    });
</script>

<style>
    .vr-container {
        display: flex;
        justify-content: center;
        align-items: center;
        padding: 0 15px;
    }

    .vr {
        border-left: 1px solid #000;
        height: 100%;
    }
</style>